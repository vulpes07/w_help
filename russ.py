import os, sys, math
from aiogram import Router, types, F
from aiogram.fsm.context import FSMContext
from aiogram.filters import Command
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
from aiogram.fsm.state import State, StatesGroup
from database import init_db, add_user, list_users, remove_user, is_registered
from reply_keyboard import menu_eng, menu, menu_germ, menu_kyrg, keyboard_3
from reply_keyboard import response_menu, response_menu_eng, response_menu_germ, response_menu_kyrg
from reply_keyboard import menu_2, menu_2_eng, menu_2_kyrg, menu_2_germ
from dotenv import load_dotenv
load_dotenv()


router = Router()

init_db()

BOT_TOKEN = os.getenv("BOT_TOKEN")
ADMIN_ID = int(os.getenv("ADMIN_ID"))  
if not BOT_TOKEN or not ADMIN_ID:
    sys.exit("Error: BOT_TOKEN or ADMIN_ID environment variable not set.")

DB_PATH = "bot_db.sqlite3"


from datetime import datetime, timedelta

def format_date(db_date, lang):
    dt = datetime.strptime(db_date, "%Y-%m-%d %H:%M:%S")
    dt += timedelta(hours=6)  
    
    date_formats = {
        "ru": dt.strftime("%d.%m.%Y %H:%M"),
        "kg": dt.strftime("%d.%m.%Y %H:%M"),
        "en": dt.strftime("%m/%d/%Y %H:%M"),
        "de": dt.strftime("%d.%m.%Y %H:%M")
    }
    return date_formats.get(lang, dt.strftime("%Y-%m-%d %H:%M"))



PHONE_PROMPTS = {
    "ru": "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:",
    "kg": "–¢–µ–ª–µ—Ñ–æ–Ω –Ω–æ–º–µ—Ä–∏“£–∏–∑–¥–∏ –∂–∞–∑—ã“£—ã–∑:",
    "en": "Enter your phone number:",
    "de": "Geben Sie Ihre Telefonnummer ein:"
}  


LOCATION_PROMPTS = {
    "ru": "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à—É –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é, –≤–∫–ª—é—á–∏—Ç–µ –ª–æ–∫–∞—Ü–∏—é –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –≤–∞—à–µ–π –≥–µ–æ–ø–æ–∑–∏—Ü–∏–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç ",
    "kg": "–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è“£—ã–∑–¥—ã –∂”©–Ω”©—Ç“Ø“£“Ø–∑, —É—á—É—Ä–¥–∞–≥—ã –≥–µ–æ–ª–æ–∫–∞—Ü–∏—è“£—ã–∑–¥—ã –∞–Ω—ã–∫—Ç–æ–æ “Ø—á“Ø–Ω –ª–æ–∫–∞—Ü–∏—è –∂–∞“£–¥—ã—Ä—ã“£—ã–∑",
    "en": "Send your geolocation, enable location on your device to determine your current geolocation",
    "de": "Senden Sie Ihre Geolokalisierung, aktivieren Sie die Ortung auf Ihrem Ger√§t, um Ihre aktuelle Geolokalisierung zu bestimmen"
    }

KIDS_BUTTONS = {
    "ru": {"yes": "–î–∞", "no": "–ù–µ—Ç"},
    "kg": {"yes": "–û–æ–±–∞", "no": "–ñ–æ–∫"},
    "en": {"yes": "Yes", "no": "No"},
    "de": {"yes": "Ja", "no": "Nein"}
}


KIDS_PROMPTS = {
    "ru": "–£ –≤–∞—Å –µ—Å—Ç—å –¥–µ—Ç–∏?",  
    "kg": "–°–∏–∑–¥–µ –±–∞–ª–¥–∞—Ä –±–∞—Ä–±—ã?",  
    "en": "Do you have children?",  
    "de": "Haben Sie Kinder?"  
}


PROBLEM_PROMPTS = {
    "ru": "–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –≤–∞—à–µ–π –ø—Ä–æ–±–ª–µ–º–µ",  
    "kg": "”®–∑ –∫”©–π–≥”©–π“Ø“£“Ø–∑ –∂”©–Ω“Ø–Ω–¥”© –∞–π—Ç—ã“£—ã–∑",  
    "en": "Tell us about your problem",  
    "de": "Erz√§hlen Sie uns von Ihrem Problem"  
}


import requests

def get_address_from_coords(lat, lon):
    try:
        url = "https://nominatim.openstreetmap.org/reverse"
        params = {
            "lat": lat,
            "lon": lon,
            "format": "json",
            "zoom": 18, 
            "addressdetails": 1
        }
        headers = {
            "User-Agent": "OSH_SU_PROFESSIONS_CHOOSER"  
        }
        response = requests.get(url, params=params, headers=headers)
        data = response.json()
        address = data.get("address", {})

        road = address.get("road", "")
        house_number = address.get("house_number", "")
        neighbourhood = address.get("neighbourhood", "")
        suburb = address.get("suburb", "")
        city = address.get("city") or address.get("town") or address.get("village", "")
        state = address.get("state", "")
        country = address.get("country", "")

        components = [road, house_number, neighbourhood, suburb, city, state, country]
        return ", ".join([part for part in components if part])
    except Exception as e:
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–æ—á–Ω—ã–π –∞–¥—Ä–µ—Å"




def haversine(lat1, lon1, lat2, lon2):
    R = 6371  
    dlat = math.radians(lat2 - lat1)
    dlon = math.radians(lat2 - lon2)
    a = math.sin(dlat / 2) ** 2 + math.cos(math.radians(lat1)) * math.cos(math.radians(lat2)) * math.sin(dlon / 2) ** 2
    c = 2 * math.atan2(math.sqrt(a), math.sqrt(1 - a))
    return R * c

class FSMAdminAdd(StatesGroup):
    name = State()
    age = State()
    gender = State()
    lang = State()
    ph_num = State()
    with_kids = State()
    problem = State()
    latitude = State()
    longitude = State()
    

class FSMAdminDel(StatesGroup):
    choose_user = State()

def is_admin(user_id: int) -> bool:
    return user_id == ADMIN_ID


keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")],
            [KeyboardButton(text="üìã –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")],
            [KeyboardButton(text="‚ùå –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")],
            [KeyboardButton(text="üçΩÔ∏è –±–µ—Å–ø–ª–∞—Ç–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ")],
            [KeyboardButton(text="üè† –ë–µ—Å–ø–ª–∞—Ç–Ω–æ–µ –∂–∏–ª—å–µ –∏ —Ö–æ—Å—Ç–µ–ª—ã")],
            [KeyboardButton(text="üå∏ –ü–æ–º–æ—â—å –∂–µ–Ω—â–∏–Ω–∞–º")],
        ],
        resize_keyboard=True
    )
keyboard_2 = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üõ† –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å")],
            [KeyboardButton(text="‚ûï –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è")]
        ],
        resize_keyboard=True
    )




@router.message(Command("start_rus"))
async def cmd_start_rus(message: types.Message):
    await message.answer(
            f"""üëã –ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! –í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –Ω–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ–∫–∞–∑–∞–Ω–∏—è –ø–æ–º–æ—â–∏. –ü–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –±–æ—Ç–∞, –ø—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é. –ê –µ—Å–ª–∏ —É–∂–µ –ø—Ä–æ—à–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ /info.

–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø–æ–º–µ–Ω—è—Ç—å —è–∑—ã–∫, –Ω–∞–∂–º–∏—Ç–µ /start          

–ü–æ –≤—Å–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ —Å–æ–∑–¥–∞—Ç–µ–ª—é –±–æ—Ç–∞: @vulpes_07.

–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:""",
            reply_markup=keyboard_2
        )

@router.message(Command("admin"))
async def admin_greeting(message: types.Message):
    if is_admin(message.from_user.id):
        await message.answer(
            f"üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {message.from_user.first_name}!\n"
            "üõ† –í–∞–º –¥–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:",
            reply_markup=keyboard
        )
    else:
        await message.answer(
            "‚õî –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ",
            reply_markup=keyboard_2
        )
@router.message(F.text == "üõ† –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å")
async def admin_panel_handler(message: types.Message):
    if not is_admin(message.from_user.id):
        await message.answer("‚õî –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏")
        return
    else:
        await message.answer(
            f"üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {message.from_user.first_name}!\n"
            "üõ† –í–∞–º –¥–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:",
            reply_markup=keyboard)  


@router.message(F.text == "‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
async def handle_add_user_button(message: types.Message, state: FSMContext):
    await start_add_user(message, state)

@router.message(F.text == "‚ûï –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è")
async def handle_add_user_button(message: types.Message, state: FSMContext):
    await start_add_user(message, state)

@router.message(F.text == "üìã –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
async def handle_list_users_button(message: types.Message):
    await list_users_command(message)

@router.message(F.text == "‚ùå –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
async def handle_remove_user_button(message: types.Message, state: FSMContext):
    await start_remove_user(message, state)

@router.message(Command("add_user"))
async def start_add_user(message: types.Message, state: FSMContext):
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:")
    await state.set_state(FSMAdminAdd.name)


@router.message(FSMAdminAdd.name)
async def load_name(message: types.Message, state: FSMContext):
    await state.update_data(name=message.text)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç:")
    await state.set_state(FSMAdminAdd.age)

@router.message(FSMAdminAdd.age)
async def load_age(message: types.Message, state: FSMContext):
    if not message.text.isdigit():
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç.")
        return
    await state.update_data(age=int(message.text))
    await state.set_state(FSMAdminAdd.gender) 
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª:", reply_markup=InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ú—É–∂—á–∏–Ω–∞", callback_data="gender_male")],
        [InlineKeyboardButton(text="–ñ–µ–Ω—â–∏–Ω–∞", callback_data="gender_female")]
    ]))
    await state.set_state(FSMAdminAdd.gender)

@router.callback_query(lambda call: call.data.startswith("gender_"))
async def load_gender(callback_query: types.CallbackQuery, state: FSMContext):
    
    data = await state.get_data()
    lang = data.get("lang", "ru")  
    
    gender = "–ú—É–∂—á–∏–Ω–∞" if callback_query.data == "gender_male" else "–ñ–µ–Ω—â–∏–Ω–∞"
    await state.update_data(gender=gender, lang=lang)
    await callback_query.message.answer(PHONE_PROMPTS.get(lang, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:"))
    await state.set_state(FSMAdminAdd.ph_num)
    
@router.message(FSMAdminAdd.ph_num)
async def load_ph_num(message: types.Message, state: FSMContext):
    if not message.text.isdigit():
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.")
        return
    await state.update_data(ph_num=int(message.text))
    
    lang = (await state.get_data()).get("lang", "ru")
    buttons = KIDS_BUTTONS.get(lang, KIDS_BUTTONS["ru"])
    
    await message.answer(KIDS_PROMPTS[lang], reply_markup=InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text=buttons["yes"], callback_data="kids_yes")],
        [InlineKeyboardButton(text=buttons["no"], callback_data="kids_no")]
    ]))
    await state.set_state(FSMAdminAdd.with_kids)


@router.callback_query(lambda call: call.data in ["kids_yes", "kids_no"])
async def load_with_kids(callback_query: types.CallbackQuery, state: FSMContext):
    with_kids = "–î–∞" if callback_query.data == "kids_yes" else "–ù–µ—Ç"
    await state.update_data(with_kids=with_kids)
    
    lang = (await state.get_data()).get("lang", "ru")
    await callback_query.message.answer(PROBLEM_PROMPTS[lang])
    await state.set_state(FSMAdminAdd.problem)



@router.message(FSMAdminAdd.problem)
async def load_problem(message: types.Message, state: FSMContext):
    await state.update_data(problem=message.text)

    lang = (await state.get_data()).get("lang", "ru")
    await message.answer(f"{message.from_user.full_name}, {LOCATION_PROMPTS[lang]}",  
        reply_markup=menu if lang == "ru" 
        else menu_eng if lang == "en" 
        else menu_germ if lang == "de" 
        else menu_kyrg)

    await state.set_state(FSMAdminAdd.latitude)


@router.message(F.location)
async def location_handler(message: types.Message, state: FSMContext):
    user_data = await state.get_data()
    lang = user_data.get("lang", "ru")  
    
    
    SUCCESS_MSGS = {
    "ru": "–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã! –°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –±–æ—Ç–∞",
    "en": "The data has been saved successfully! Thank you for the registration, now you can use bot functions",
    "de": "Die Daten wurden erfolgreich gespeichert! Vielen Dank f√ºr die Registrierung, jetzt k√∂nnen Sie die Bot-Funktionen nutzen",
    "kg": "–î–∞–π—ã–Ω–¥–∞—Ä—ã“£—ã–∑ –∏–π–≥–∏–ª–∏–∫—Ç“Ø“Ø –∫–æ—à—É–ª–¥—É! –ö–∞—Ç—Ç–æ–æ–¥–æ–Ω ”©—Ç–∫”©–Ω“Ø“£“Ø–∑ “Ø—á“Ø–Ω —Ä–∞—Ö–º–∞—Ç, –±–æ—Ç—Ç—É–Ω –º“Ø–º–∫“Ø–Ω—á“Ø–ª“Ø–∫—Ç”©—Ä“Ø–Ω –∫–æ–ª–¥–æ–Ω–æ –∞–ª–∞—Å—ã–∑"
    }

    add_user(
    name=user_data["name"],
    age=user_data["age"],
    gender=user_data["gender"],
    ph_num=user_data["ph_num"],
    with_kids=user_data["with_kids"],
    problem=user_data["problem"],
    latitude=message.location.latitude,
    longitude=message.location.longitude,
    user_id=message.from_user.id,
    first_name=message.from_user.first_name,
    last_name=message.from_user.last_name,
    username=message.from_user.username
    )

    await message.answer(
    SUCCESS_MSGS[lang], 
    reply_markup=menu_2 if lang == "ru" 
    else menu_2_eng if lang == "en" 
    else menu_2_germ if lang == "de" 
    else menu_2_kyrg
    )
    await state.clear()



@router.message(Command("info"))
async def info_command(message: types.Message, state: FSMContext):
    
    lang = (await state.get_data()).get("lang", "ru")
    COMM_LIST_PROMPTS = {
    "ru": "üìã–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥: ",
    "kg": "üìã–ñ–µ—Ç–∫–∏–ª–∏–∫—Ç“Ø“Ø –±—É–π—Ä—É–∫—Ç–∞—Ä–¥—ã–Ω —Ç–∏–∑–º–µ—Å–∏: ",
    "en": "üìãList of the available cammands: ",
    "de": "üìãListe der verf√ºgbaren Befehle: "
    }

    await message.answer(f"{message.from_user.full_name}, {COMM_LIST_PROMPTS[lang]}",  
    reply_markup=response_menu if lang == "ru" 
    else response_menu_eng if lang == "en" 
    else response_menu_germ if lang == "de" 
    else response_menu_kyrg )





@router.message(Command("list_users"))
async def list_users_command(message: types.Message):
    if not is_admin(message.from_user.id):
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.")
        return
    users = list_users()
    if not users:
        await message.answer("–í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.")
        return

    response_lines = []
    for id, name, age, gender, ph_num, with_kids, problem, latitude, longitude, user_id, first_name, last_name, username, registration_date in users:
        location_str = get_address_from_coords(latitude, longitude)
        formatted_date = format_date(registration_date, "ru")
        response_lines.append(f"""                              
‚Ññ {id}. {name}
–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {formatted_date} 
1. –í–æ–∑—Ä–∞—Å—Ç: {age}
2. –ü–æ–ª: {gender}
3. –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {ph_num}
4. –î–µ—Ç–∏: {with_kids}
5. –ü—Ä–æ–±–ª–µ–º–∞: {problem}
6. username: @{username if username else '-'}
7. –ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è —É–∫–∞–∑–∞–Ω–Ω–∞—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –≤ —Ç–≥: {first_name} {last_name}
8. ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user_id}
9. –õ–æ–∫–∞—Ü–∏—è: {location_str}
10. –õ–æ–∫–∞—Ü–∏—è: —à–∏—Ä–æ—Ç–∞: {latitude}, –¥–æ–ª–≥–æ—Ç–∞: {longitude}

""") 
    await message.answer(f"üìã–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n{''.join(response_lines)}")




@router.message(Command("remove_user"))
async def start_remove_user(message: types.Message, state: FSMContext):
    users = list_users()

    if not users:
        await message.answer("–í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.")
        return

    kb = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text=f"{user[0]}. {user[1]}", callback_data=f"remove_{user[0]}")]
            for user in users
        ]
    )

    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:", reply_markup=kb)


@router.callback_query(lambda query: query.data and query.data.startswith("remove_"))
async def process_remove_user(callback_query: types.CallbackQuery, state: FSMContext):
    user_id = int(callback_query.data.split("_")[1])
    remove_user(user_id)

    data = await state.get_data()
    lang = data.get("lang", "ru")  


    del_resp = (f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} —É–¥–∞–ª—ë–Ω." if lang == "ru" 
                else f"‚úÖ The user: {user_id} was removed." if lang == "en" 
                else f"‚úÖ Der Benutzer: {user_id} wurde entfernt." if lang == "de"  
                else f"‚úÖ –ö–æ–ª–¥–æ–Ω—É—É—á—É {user_id} –∂–æ–∫ –∫—ã–ª—ã–Ω–¥—ã.")

    await callback_query.message.edit_text(del_resp)
    await state.clear()   






@router.message(F.text == "üçΩÔ∏è –±–µ—Å–ø–ª–∞—Ç–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ")
async def cmd_food_rus(message: types.Message):
    if not (is_admin(message.from_user.id) or is_registered(message.from_user.id)):
        await message.answer("–ü—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, —á—Ç–æ–±—ã –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –±–æ—Ç–∞.", reply_markup=keyboard_3)
        return
    await message.answer(
        f"""
1. __–°–æ—Ü–∏–∞–ª—å–Ω—ã–π –º–∞–≥–∞–∑–∏–Ω ¬´–•–∞–¥–∏—è¬ª__  
–û–ø–∏—Å–∞–Ω–∏–µ: –ú–∞–≥–∞–∑–∏–Ω, –≥–¥–µ –º–∞–ª–æ–∏–º—É—â–∏–µ —Å–µ–º—å–∏ –º–æ–≥—É—Ç –±–µ—Å–ø–ª–∞—Ç–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç—ã –ø–∏—Ç–∞–Ω–∏—è –∏ –æ–¥–µ–∂–¥—É.  
–ê–¥—Ä–µ—Å: –ú–∏–∫—Ä–æ—Ä–∞–π–æ–Ω ¬´–ê–º–∏—Ä-–¢–∏–º—É—Ä¬ª, —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∞–ª—å–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ ‚Ññ 9, –≥. –û—à.  
–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–º–æ—â–∏ –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è —Å–ø—Ä–∞–≤–∫–∞ –æ—Ç –∫–≤–∞—Ä—Ç–∞–ª—å–Ω–æ–≥–æ –∫–æ–º–∏—Ç–µ—Ç–∞.  
–ü–æ–¥—Ä–æ–±–Ω–µ–µ –Ω–∞ –í–µ—Å—Ç–∏.kg: https://vesti.kg/obshchestvo/item/102644-v-oshe-otkroyut-sotsialnye-magaziny-dlya-maloobespechennykh-sloev-naseleniya.html  
–ü–æ–¥—Ä–æ–±–Ω–µ–µ –Ω–∞ –ù–æ–≤–æ—Å—Ç–∏ –ê–∑–∏–∏: https://www.news-asia.ru/view/5/10322  

2. __–û–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ñ–æ–Ω–¥ ¬´–ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω –ñ–∞—à—Ç–∞—Ä –´–Ω—Ç—ã–º–∞–≥—ã¬ª__  
–û–ø–∏—Å–∞–Ω–∏–µ: –û–∫–∞–∑—ã–≤–∞–µ—Ç –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω—É—é –ø–æ–º–æ—â—å –Ω—É–∂–¥–∞—é—â–∏–º—Å—è —Å–µ–º—å—è–º, –≤–∫–ª—é—á–∞—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –ø–∏—Ç–∞–Ω–∏—è –ø–µ—Ä–≤–æ–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏.  
–ê–¥—Ä–µ—Å: –≥. –û—à (—Ç–æ—á–Ω—ã–π –∞–¥—Ä–µ—Å –Ω–µ —É–∫–∞–∑–∞–Ω).  
–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –§–æ–Ω–¥ –∞–∫—Ç–∏–≤–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –º–∏–∫—Ä–æ—Ä–∞–π–æ–Ω–∞—Ö –ö—É–ª–∞—Ç–æ–≤, –ê–Ω–∞—Ä –∏ –¢–æ–ª–æ–π–∫–æ–Ω.  
–ü–æ–¥—Ä–æ–±–Ω–µ–µ –Ω–∞ –ú–µ–¥–∏–∞ –¶–µ–Ω—Ç—Ä: https://media-center.kg/ru/news/Kirgizstan-ZHashtar-Intimagi-okazal-pomoshch-nuzhdayushchimsya-semyam-v-Oshe-foto-920431711  

3. __–û–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ñ–æ–Ω–¥ ¬´–ë–ª–∞–≥–æ–¥–∞—Ç—å¬ª__  
–û–ø–∏—Å–∞–Ω–∏–µ: –û–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ñ–æ–Ω–¥, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—â–∏–π –ø–æ–º–æ—â—å –Ω—É–∂–¥–∞—é—â–∏–º—Å—è.  
–ê–¥—Ä–µ—Å: —É–ª. –õ–µ–Ω–∏–Ω–∞, 205, –∫–∞–±–∏–Ω–µ—Ç—ã 211, 213, 214; 2 —ç—Ç–∞–∂, –º-–Ω –§—Ä—É–Ω–∑–µ, –≥. –û—à.  
–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏: Instagram: https://www.instagram.com/  

4. __–û–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω—ã–π —Ñ–æ–Ω–¥ ¬´–°–∞–Ω—Ç–µ—Ä—Ä–∞-–Æ–≥¬ª__  
–û–ø–∏—Å–∞–Ω–∏–µ: –§–æ–Ω–¥ —Ä–æ–¥–∏—Ç–µ–ª–µ–π –¥–µ—Ç–µ–π —Å —Å–∏–Ω–¥—Ä–æ–º–æ–º –î–∞—É–Ω–∞, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—â–∏–π –ø–æ–¥–¥–µ—Ä–∂–∫—É –∏ –ø–æ–º–æ—â—å.  
–ê–¥—Ä–µ—Å: —É–ª. –ê—Å–∫–∞—Ä –®–∞–∫–∏—Ä–æ–≤, 10/1, –≥. –û—à.  
–í–µ–±-—Å–∞–π—Ç: sunterra.kg: https://sunterra.kg/  

5. __–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ –º–∞–≥–∞–∑–∏–Ω—ã –ø—Ä–∏ –º—É–Ω–∏—Ü–∏–ø–∞–ª—å–Ω—ã—Ö —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∞–ª—å–Ω—ã—Ö —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è—Ö__  
–û–ø–∏—Å–∞–Ω–∏–µ: –ú–∞–≥–∞–∑–∏–Ω—ã, –≥–¥–µ –º–∞–ª–æ–æ–±–µ—Å–ø–µ—á–µ–Ω–Ω—ã–µ –∂–∏—Ç–µ–ª–∏ –º–æ–≥—É—Ç –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –º—è—Å–Ω—É—é –∏ –º–æ–ª–æ—á–Ω—É—é –ø—Ä–æ–¥—É–∫—Ü–∏—é –ø–æ —Ü–µ–Ω–∞–º –Ω–∞ 10% –Ω–∏–∂–µ —Ä—ã–Ω–æ—á–Ω—ã—Ö.  
–ê–¥—Ä–µ—Å: –í–æ –≤—Å–µ—Ö —Å–µ–º–∏ –º—É–Ω–∏—Ü–∏–ø–∞–ª—å–Ω—ã—Ö —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∞–ª—å–Ω—ã—Ö —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è—Ö –≥–æ—Ä–æ–¥–∞ –û—à.  
–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –ü—Ä–æ–µ–∫—Ç —Ä–µ–∞–ª–∏–∑—É–µ—Ç—Å—è –ø—Ä–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–µ –º—ç—Ä–∏–∏ –≥–æ—Ä–æ–¥–∞.  
–ü–æ–¥—Ä–æ–±–Ω–µ–µ –Ω–∞ –í–µ—Å—Ç–∏.kg: https://vesti.kg/obshchestvo/item/102644-v-oshe-otkroyut-sotsialnye-magaziny-dlya-maloobespechennykh-sloev-naseleniya.html  

6. __–û—à—Å–∫–æ–µ –≥–æ—Ä–æ–¥—Å–∫–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Ü–∏–∞–ª—å–Ω–æ–≥–æ —Ñ–æ–Ω–¥–∞__  
–û–ø–∏—Å–∞–Ω–∏–µ: –ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–µ —É—á—Ä–µ–∂–¥–µ–Ω–∏–µ, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—â–µ–µ —Å–æ—Ü–∏–∞–ª—å–Ω—É—é –ø–æ–º–æ—â—å –Ω—É–∂–¥–∞—é—â–∏–º—Å—è.  
–ê–¥—Ä–µ—Å: —É–ª. –ö—É—Ä–º–∞–Ω–∂–∞–Ω-–î–∞—Ç–∫–∞, 130, –≥. –û—à.  
–ö–æ–Ω—Ç–∞–∫—Ç—ã: +996 (3222) 2-28-70.  
"""
    )


@router.message(F.text == "üè† –ë–µ—Å–ø–ª–∞—Ç–Ω–æ–µ –∂–∏–ª—å–µ –∏ —Ö–æ—Å—Ç–µ–ª—ã")
async def cmd_house_rus(message: types.Message):
    if not (is_admin(message.from_user.id) or is_registered(message.from_user.id)):
        await message.answer("–ü—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, —á—Ç–æ–±—ã –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –±–æ—Ç–∞.", reply_markup=keyboard_3)
        return
    await message.answer(
        f"""
1. __–®–µ–ª—Ç–µ—Ä –ø—Ä–∏ –û–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ ¬´–ú—É—Å–∞–∞–¥–∞¬ª__  
–û–ø–∏—Å–∞–Ω–∏–µ: –ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ –∏–∑–≤–µ—Å—Ç–Ω–æ–µ —É–±–µ–∂–∏—â–µ –¥–ª—è –±–µ–∑–¥–æ–º–Ω—ã—Ö –≤ –û—à–µ, —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–Ω–æ–µ –Ω–∞ 15 —á–µ–ª–æ–≤–µ–∫. –°–æ–∑–¥–∞–Ω–æ —Å–æ–≤–º–µ—Å—Ç–Ω–æ —Å –º—ç—Ä–∏–µ–π –≥–æ—Ä–æ–¥–∞.  
–ê–¥—Ä–µ—Å: –≥. –û—à (—Ç–æ—á–Ω—ã–π –∞–¥—Ä–µ—Å –Ω–µ —É–∫–∞–∑–∞–Ω).  
–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ–µ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏–µ –¥–ª—è –±–µ–∑–¥–æ–º–Ω—ã—Ö.  
–ü–æ–¥—Ä–æ–±–Ω–µ–µ –Ω–∞ interbilimosh.kg: https://www.interbilimosh.kg/a-vy-znali-chto-v-oshe-chislo-bezdomnyh-variruetsya-ot-56-do-70/  

2. __–•–æ—Å—Ç–µ–ª—ã —Å –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ —Ü–µ–Ω–∞–º–∏__  
–•–æ—Ç—è —ç—Ç–æ –Ω–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –ø—Ä–∏—é—Ç—ã, –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Å—Ç–µ–ª—ã –≤ –û—à–µ –ø—Ä–µ–¥–ª–∞–≥–∞—é—Ç –Ω–µ–¥–æ—Ä–æ–≥–æ–µ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏–µ, —á—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç–æ–º –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –Ω–æ—á–ª–µ–≥–∞:  
- Wood Hostel: –æ—Ç 297 —Å–æ–º –∑–∞ –Ω–æ—á—å.  
- Hostel Visit: –æ—Ç 459 —Å–æ–º –∑–∞ –Ω–æ—á—å.  
- ABS Guest House: –æ—Ç 350 —Å–æ–º –∑–∞ –Ω–æ—á—å.  
- Sunny Hostel: –æ—Ç 297 —Å–æ–º –∑–∞ –Ω–æ—á—å.  
- Ocean Hostel: –æ—Ç 297 —Å–æ–º –∑–∞ –Ω–æ—á—å.  
–°–º–æ—Ç—Ä–µ—Ç—å —Ö–æ—Å—Ç–µ–ª—ã –Ω–∞ hostelz.com: https://www.hostelz.com/hostels/Kyrgyzstan/Osh  

3. __–û–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∏ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—ã__  
–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –≤ –û—à–µ –º–æ–≥—É—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –ø–æ–º–æ—â—å –Ω—É–∂–¥–∞—é—â–∏–º—Å—è, –≤–∫–ª—é—á–∞—è –≤—Ä–µ–º–µ–Ω–Ω–æ–µ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏–µ:  
- –û–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ñ–æ–Ω–¥ ¬´–ë–ª–∞–≥–æ–¥–∞—Ç—å¬ª  
  - –ê–¥—Ä–µ—Å: —É–ª. –õ–µ–Ω–∏–Ω–∞, 205, –∫–∞–±–∏–Ω–µ—Ç—ã 211, 213, 214; 2 —ç—Ç–∞–∂, –º-–Ω –§—Ä—É–Ω–∑–µ, –≥. –û—à.  
  - –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏: Instagram: https://www.instagram.com/  
  - –ü–æ–¥—Ä–æ–±–Ω–µ–µ –Ω–∞ 2–ì–ò–°: https://2gis.kg/osh/firm/70000001030680206  

- –û–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ñ–æ–Ω–¥ ¬´–°–∞–Ω—Ç–µ—Ä—Ä–∞-–Æ–≥¬ª  
  - –ê–¥—Ä–µ—Å: —É–ª. –ê—Å–∫–∞—Ä –®–∞–∫–∏—Ä–æ–≤, 10/1, –≥. –û—à.  
  - –í–µ–±-—Å–∞–π—Ç: sunterra.kg: https://sunterra.kg/  
  - –ü–æ–¥—Ä–æ–±–Ω–µ–µ –Ω–∞ 2–ì–ò–°: https://2gis.kg/osh/firm/70000001069418449  
"""
    )


@router.message(F.text == "üå∏ –ü–æ–º–æ—â—å –∂–µ–Ω—â–∏–Ω–∞–º")
async def cmd_help_rus(message: types.Message):
    if not (is_admin(message.from_user.id) or is_registered(message.from_user.id)):
        await message.answer("–ü—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, —á—Ç–æ–±—ã –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –±–æ—Ç–∞.", reply_markup=keyboard_3)
        return
    await message.answer(
        f"""
1. __–ö—Ä–∏–∑–∏—Å–Ω—ã–π —Ü–µ–Ω—Ç—Ä ¬´–ê–∫-–ñ—É—Ä–æ–∫¬ª__  
–û–ø–∏—Å–∞–Ω–∏–µ: –û–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ, —Ä–∞–±–æ—Ç–∞—é—â–µ–µ —Å 2002 –≥–æ–¥–∞, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫—É—é, —é—Ä–∏–¥–∏—á–µ—Å–∫—É—é –∏ —Å–æ—Ü–∏–∞–ª—å–Ω—É—é –ø–æ–º–æ—â—å –∂–µ–Ω—â–∏–Ω–∞–º –∏ –¥–µ—Ç—è–º, –ø–æ—Å—Ç—Ä–∞–¥–∞–≤—à–∏–º –æ—Ç –Ω–∞—Å–∏–ª–∏—è. –í 2009 –≥–æ–¥—É –æ—Ç–∫—Ä—ã—Ç —à–µ–ª—Ç–µ—Ä –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è.  
–ê–¥—Ä–µ—Å: –≥. –û—à, —É–ª. –õ–µ–Ω–∏–Ω–∞, 205  
–¢–µ–ª–µ—Ñ–æ–Ω: +996 (3222) 4-59-76  
–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞: kjurok01@gmail.com  
–í–µ–±-—Å–∞–π—Ç: crisis-center-osh.org: https://crisis-center-osh.org/  
–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏: Facebook: https://www.facebook.com/akjurokcrisiscenter/?locale=ru_RU, Instagram: https://www.instagram.com/p/CiQTqYhLdih/  

2. __–ö—Ä–∏–∑–∏—Å–Ω—ã–π —Ü–µ–Ω—Ç—Ä ¬´–ê—Ä—É—É–ª–∞–Ω¬ª –ø—Ä–∏ –û–û ¬´–ê—è–ª–∑–∞—Ç¬ª__  
–û–ø–∏—Å–∞–Ω–∏–µ: –¶–µ–Ω—Ç—Ä –æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫—É—é, —é—Ä–∏–¥–∏—á–µ—Å–∫—É—é –∏ –º–µ–¥–∏—Ü–∏–Ω—Å–∫—É—é –ø–æ–º–æ—â—å –∂–µ–Ω—â–∏–Ω–∞–º –∏ –¥–µ–≤–æ—á–∫–∞–º, –ø–æ—Å—Ç—Ä–∞–¥–∞–≤—à–∏–º –æ—Ç —Å–µ–º–µ–π–Ω–æ–≥–æ –Ω–∞—Å–∏–ª–∏—è.  
–ê–¥—Ä–µ—Å: –≥. –û—à, —É–ª. –õ–µ–Ω–∏–Ω–∞, 205  
–¢–µ–ª–µ—Ñ–æ–Ω: +996 (3222) 5-56-08  
–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞: ayalzat@netmail.kg  
–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏: Instagram: https://www.instagram.com/ayalzat.osh/p/Csv3Fr5Mqdc/  

3. __–û–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ ¬´–ú—ç—ç—Ä–±–∞–Ω¬ª__  
–û–ø–∏—Å–∞–Ω–∏–µ: –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫—É—é –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É –∂–µ–Ω—â–∏–Ω–∞–º, –ø–æ—Å—Ç—Ä–∞–¥–∞–≤—à–∏–º –æ—Ç –Ω–∞—Å–∏–ª–∏—è, –∞ —Ç–∞–∫–∂–µ –ø—Ä–æ–≤–æ–¥–∏—Ç –∞–¥–≤–æ–∫–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–∞–º–ø–∞–Ω–∏–∏.  
–ê–¥—Ä–µ—Å: –≥. –û—à, —É–ª. –õ–µ–Ω–∏–Ω–∞, 312/23  
–¢–µ–ª–µ—Ñ–æ–Ω—ã: +996 (3222) 7-40-06, +996 (3222) 7-40-17  
–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞: meerban.osh@mail.ru  
"""
    )
